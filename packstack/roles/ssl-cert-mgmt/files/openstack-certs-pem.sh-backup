#!/bin/bash

ssl_dir="$PWD/ssl-certs"
ca_key="ca-key.pem"
ca_cert="ca-cert.pem"
ca_cert_input="/C=IN/ST=KA/L=Banlagore/O=QuasarStack/OU=CloudServices/CN=*.quasarstack.com/emailAddress=techschool.guru@gmail.com"

server_key="server-key.pem"
server_csr="server-csr.pem"
server_cert="server-cert.pem"
server_csr_input="/C=IN/ST=KA/L=Banlagore/O=QuasarStack/OU=CloudServices/CN=*.quasarstack.com/emailAddress=root@localhost"

# https://access.redhat.com/documentation/en-us/red_hat_openstack_platform/16.1/html/director_installation_and_usage/configuring-custom-ssl-tls-certificates
touch /etc/pki/CA/index.txt
echo '1000' | tee /etc/pki/CA/serial

[ ! -d $ssl_dir ] && mkdir $ssl_dir
cd $ssl_dir

ca_certs(){

	if [ ! -f $ca_key ];then
		openssl genrsa -out $ca_key 4096
	fi

	if [ ! -f $ca_cert ];then
		openssl req  -key $ca_key -new -x509 -days 7300 -extensions v3_ca -out ca.crt.pem -subj $ca_cert_input
	fi

#	echo
#	echo "Read out CA cert"
#	openssl x509 -in $ca_cert -noout -text

}

server_certs(){

	if [ ! -f $server_key ];then
		openssl req -newkey rsa:4096 -keyout $server_key -out $server_csr \
			-subj "$server_csr_input"
		if [ $? != 0 ];then
			rm -rf $server_key $server_csr
		fi
	fi

	if [ ! -f $server_cert ];then
		openssl x509 -req -in $server_csr -days 60 -CA $ca_cert -CAkey $ca_key -CAcreateserial -out $server_cert
		[ $? != 0 ] && echo "Failed to create cert" && exit 1
	fi

	echo
	echo "Verfy Server certs with CA"
	openssl verify -CAfile $ca_cert $server_cert


}

ca_certs

server_certs
